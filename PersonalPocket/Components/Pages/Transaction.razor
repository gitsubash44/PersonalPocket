@page "/transaction"
@using System.Text.Json


<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Transaction Tracking</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
</head>

<div class="container my-5">
    <h1 class="text-center mb-4">Transaction Tracking</h1>

    <!-- Summary Section -->
    <div class="row mb-4">
        <div class="col-md-4">
            <div class="card text-white bg-success">
                <div class="card-body">
                    <h5 class="card-title">Total Cash In</h5>
                    <p class="card-text" id="totalCashIn">$0</p>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="card text-white bg-danger">
                <div class="card-body">
                    <h5 class="card-title">Total Cash Out</h5>
                    <p class="card-text" id="totalCashOut">$0</p>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="card text-white bg-success">
                <div class="card-body">
                    <h5 class="card-title">Current Balance</h5>
                    <p class="card-text" id="currentBalance">$0</p>
                </div>
            </div>
        </div>
    </div>

    <!-- Toggle Buttons -->
    <div class="d-flex justify-content-between mb-4">
        <button class="btn btn-primary" type="button" data-bs-toggle="collapse" data-bs-target="#addTransactionSection" aria-expanded="false" aria-controls="addTransactionSection">
            Add Transaction
        </button>
        <button class="btn btn-secondary" type="button" data-bs-toggle="collapse" data-bs-target="#filterSortSection" aria-expanded="false" aria-controls="filterSortSection">
            Filter & Sort Transactions
        </button>
    </div>


    <!-- Add Transaction Section -->
    <div class="collapse" id="addTransactionSection">
        <div class="card mb-4">
            <div class="card-header bg-primary text-white">Add Transaction</div>
            <div class="card-body">
                <EditForm Model="transaction" OnValidSubmit="AddTransaction">
                    <div class="row g-3">
                        <div class="col-md-6">
                            <label for="transactionTitle" class="form-label">Title</label>
                            <InputText id="transactionTitle" class="form-control" @bind-Value="transaction.Title" placeholder="e.g., Salary, Grocery" />
                        </div>
                        <div class="col-md-6">
                            <label for="transactionType" class="form-label">Type</label>
                            <InputSelect id="transactionType" class="form-select" @bind-Value="transaction.Type">
                                <option value="" disabled selected>Choose...</option>
                                <option value="credit">Credit</option>
                                <option value="debit">Debit</option>
                                <option value="debt">Debt</option>
                            </InputSelect>
                        </div>
                        <div class="col-md-6">
                            <label for="transactionAmount" class="form-label">Amount</label>
                            <InputNumber id="transactionAmount" class="form-control" @bind-Value="transaction.Amount" placeholder="e.g., 1000" />
                        </div>
                        <div class="col-md-6">
                            <label for="transactionDate" class="form-label">Date</label>
                            <InputDate id="transactionDate" class="form-control" @bind-Value="transaction.Date" />
                        </div>
                        <div class="col-md-6">
                            <label for="transactionTags" class="form-label">Tags</label>
                            <InputSelect id="transactionTags" class="form-select" @bind-Value="transaction.Tag">
                                <option value="" disabled selected>Choose...</option>
                                <option value="Yearly">Yearly</option>
                                <option value="Monthly">Monthly</option>
                                <option value="Food">Food</option>
                                <option value="Drinks">Drinks</option>
                                <option value="Clothes">Clothes</option>
                                <option value="Gadgets">Gadgets</option>
                                <option value="Fuel">Fuel</option>
                                <option value="Rent">Rent</option>
                                <option value="Others">Others</option>
                            </InputSelect>
                        </div>
                        <div class="col-md-6">
                            <label for="transactionNotes" class="form-label">Notes</label>
                            <InputTextArea id="transactionNotes" class="form-control" @bind-Value="transaction.Notes" rows="2" placeholder="Optional notes" />
                        </div>
                    </div>
                    <div class="mt-3">
                        <button type="submit" class="btn btn-primary">Add Transaction</button>
                    </div>
                </EditForm>
            </div>
        </div>
    </div>

    @code {
        private TransactionModel transaction = new TransactionModel();
        private List<TransactionModel> transactions = new List<TransactionModel>();

        private void AddTransaction()
        {
            transactions.Add(transaction);
            transaction = new TransactionModel();
            SaveTransactionsToFile();
        }

        private void SaveTransactionsToFile()
        {
            var json = JsonSerializer.Serialize(transactions);
            var path = Path.Combine(FileSystem.AppDataDirectory, "transactions.json");
            File.WriteAllText(path, json);
        }

        protected override void OnInitialized()
        {
            var path = Path.Combine(FileSystem.AppDataDirectory, "transactions.json");
            if (File.Exists(path))
            {
                var json = File.ReadAllText(path);
                transactions = JsonSerializer.Deserialize<List<TransactionModel>>(json) ?? new List<TransactionModel>();
            }
        }

        public class TransactionModel
        {
            public string Title { get; set; }
            public string Type { get; set; }
            public decimal Amount { get; set; }
            public DateTime Date { get; set; }
            public string Tag { get; set; }
            public string Notes { get; set; }
        }
    }


    <!-- Filters Section -->
    <div class="collapse" id="filterSortSection">
        <div class="card mb-4">
            <div class="card-header bg-secondary text-white">Filter & Sort Transactions</div>
            <div class="card-body">
                <div class="row g-3">
                    <div class="col-md-3">
                        <label for="filterType" class="form-label">Type</label>
                        <select id="filterType" class="form-select">
                            <option selected>All</option>
                            <option value="credit">Credit</option>
                            <option value="debit">Debit</option>
                        </select>
                    </div>
                    <div class="col-md-3">
                        <label for="filterPeriod" class="form-label">Period</label>
                        <select id="filterPeriod" class="form-select">
                            <option selected>All</option>
                            <option value="daily">Daily</option>
                            <option value="weekly">Weekly</option>
                            <option value="monthly">Monthly</option>
                        </select>
                    </div>
                    <div class="col-md-3">
                        <label for="filterTitle" class="form-label">Title</label>
                        <input type="text" class="form-control" id="filterTitle" placeholder="Search by title">
                    </div>
                    <div class="col-md-3">
                        <label for="filterTags" class="form-label">Tags</label>
                        <input type="text" class="form-control" id="filterTags" placeholder="e.g., Rent">
                    </div>
                    <div class="col-md-6">
                        <label for="filterDateRange" class="form-label">Date Range</label>
                        <input type="text" class="form-control" id="filterDateRange" placeholder="e.g., 2024-01-01 to 2024-12-31">
                    </div>
                    <div class="col-md-6">
                        <label for="sortBy" class="form-label">Sort By</label>
                        <select id="sortBy" class="form-select">
                            <option value="date" selected>Date</option>
                            <option value="amount">Amount</option>
                            <option value="type">Type</option>
                            <option value="title">Title</option>
                        </select>
                    </div>
                </div>
                <div class="mt-3">
                    <button type="submit" class="btn btn-secondary">Apply Filters</button>
                </div>
            </div>
        </div>
    </div>

    

    <!-- Transaction List Section -->
    <div class="card">
        <div class="card-header bg-dark text-white">Transaction List</div>

        <div class="card-body">
            <div class="table-responsive">
                @if (transactions == null || transactions.Count == 0)
                {
                    <p>No transactions available.</p>
                }
                else
                {
                    <table class="table table-striped">
                        <thead class="table-dark">
                            <tr>
                                <th scope="col">#</th>
                                <th scope="col">Title</th>
                                <th scope="col">Type</th>
                                <th scope="col">Amount</th>
                                <th scope="col">Date</th>
                                <th scope="col">Tags</th>
                                <th scope="col">Notes</th>
                                <th scope="col">Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var transaction in transactions.Select((value, index) => new { Value = value, Index = index }))
                            {
                                <tr class="@(transaction.Value.Type.ToLower() == "debit" ? "table-warning" : "")">
                                    <td>@transaction.Index + 1</td>
                                    <td>@transaction.Value.Title</td>
                                    <td>
                                        <span class="badge @(transaction.Value.Type.ToLower() == "credit" ? "bg-success" : "bg-danger")">
                                            @transaction.Value.Type
                                        </span>
                                    </td>
                                    <td>@transaction.Value.Amount.ToString("C")</td>
                                    <td>@transaction.Value.Date.ToShortDateString()</td>
                                    <td>@transaction.Value.Tag</td>
                                    <td>@transaction.Value.Notes</td>
                                    @* <td>
                                        <button class="btn btn-sm btn-success" @onclick="() => EditTransaction(transaction.Index)">Edit</button>
                                        <button class="btn btn-sm btn-danger" @onclick="() => DeleteTransaction(transaction.Index)">Delete</button>
                                    </td> *@
                                </tr>
                            }
                        </tbody>
                    </table>
                }
            </div>
        </div>
    </div>
</div>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
